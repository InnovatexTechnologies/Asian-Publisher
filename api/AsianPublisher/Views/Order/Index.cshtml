@model IEnumerable<AsianPublisher.Models.Order>

@{
    ViewData["Title"] = "Index";
    string myurl = Context.Request.Path + Context.Request.HttpContext.Request.QueryString;
}
<div class="col-lg-2" style="float:left;">
    <h4>Order List</h4>
</div>
<div class="col-lg-7" style="float:left;">
    <form method="post" action="~/Order/Index">
        <div class="col-lg-3" style="float:left;">
            <label for="fromDate">From Date</label>
            <input type="date" class="form-control" id="fromDate" name="fromDate" />
        </div>
        <div class="col-lg-3" style="float:left;">
            <label for="toDate">To Date</label>
            <input type="date" class="form-control" id="toDate" name="toDate" />
        </div>
        <div class="col-lg-2" style="float:left;">
            <label for="status">Payment</label>
            <select class="form-control" name="status" id="status">
                <option value="">Select Payment Status</option>
                <option value="0">Unpaid</option>
                <option value="1">Paid</option>
                <option value="-1">Pending</option>
            </select>
        </div>
        <div class="col-lg-3" style="float:left;">
            <label for="isDispatch">Is Dispatch</label>
            <select class="form-control" name="isDispatch" id="isDispatch">
                <option value="">Select Is Dispatch</option>
                <option value="0">Order Placed</option>
                <option value="1">Dispatched</option>
                <option value="-1">Cancelled</option>
            </select>
        </div>
        <div class="col-lg-1" style="float:left; padding-top:32px;">
            <button type="submit" class="btn btn-info">Filter</button>
        </div>
    </form>
</div>
<div class="col-lg-3" style="float:left; padding-top:32px;">
    <a href="~/Order/Create?url=@myurl" class="btn-sm btn-success">Create New</a>
    <a href="/Order/GenerateExcel" class="btn-sm btn-primary">Excel</a>
    <a href="/Order/GeneratePdf" class="btn-sm btn-secondary">PDF</a>
</div>
<br />
<br />
<br />
<br />
<table class="table table-striped">
    <thead>
        <tr>
            <th>
                Name
            </th>
            @* <th>
            Email
            </th>
            <th style="width:20%;">
            Address
            </th> *@
            <th>
                MobileNo
            </th>
            <th>
                Date
            </th>
            @*  <th>
            Time
            </th> *@
            <th>
                Payment Status
            </th>
            <th>
                IsDispatch
            </th>
            <th>Amount</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @item.name
                </td>
                @*  <td>
            @item.email
            </td>
            <td>
            @(
            string.Join(", ", new[] { @item.address, @item.city, @item.state, @item.country }.Where(s => !string.IsNullOrEmpty(s)))
            )
            </td> *@
                <td>
                    @item.mobileNo
                </td>
                @if (item.date != 0)
                {
                    <td>
                        @item.dateNew
                    </td>
                }
                else
                {
                    <td></td>
                }

                @*  @if (item.time != 0)
            {
            <td>
            @item.time.ToTime().ToString("HH:mm")
            </td>
            }
            else
            {
            <td></td>
            } *@
                <td>
                   @if (item.status == 0)
                    {
                        item.statusN = "Unpaid";
                    }
                    else if (item.status == 1)
                    {
                        item.statusN = "Paid";
                    }
                    else if (item.status == -1)
                    {
                        item.statusN = "Pending";
                    }

                    @item.statusN
                </td>

                <td>
                   @if (item.isDispatch == 0)
                    {
                        item.isDispatchN = "Order Placed";
                    }
                    else if (item.isDispatch == 1)
                    {
                        item.isDispatchN = "Dispatched";
                    }
                    else if (item.isDispatch == -1)
                    {
                        item.isDispatchN = "Cancelled";
                    }
                    @item.isDispatchN
                </td>

                <td>@item.TotalAmount</td>
                <td style="zoom:80%;">
                    <div class="dropdown" style="float:left;">
                        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton-@item.id" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Menu
                        </button>
                        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton-@item.id">
                            <a class="dropdown-item" href="~/OrderMeta/Index?OrderId=@item.id&name=@item.name&email=@item.email&address=@(string.Join(", ", new[] { @item.address, @item.city, @item.state, @item.country }.Where(s => !string.IsNullOrEmpty(s))))&date=@item.dateNew&status=@item.status&isDispatch=@item.isDispatch">Detail</a>
                            <a class="dropdown-item" href="~/Order/Edit/@item.id?url = @myurl">Edit</a>
                            <a class="dropdown-item" href="~/Order/Delete/@item.id?url = @myurl">Delete</a>
                            <a class="dropdown-item" href="DispatchDetail/Create?id=@item.id&url=/DispatchDetail/Index?OrderId=@item.id">Dispatch Detail</a>
                            <a class="dropdown-item" href="~/Order/OrderPdf/@item.id">Order PDF</a>
                        </div>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>
@* <script>
    document.addEventListener("DOMContentLoaded", function () {
        var dropdownToggles = document.querySelectorAll(".dropdown-toggle");

        dropdownToggles.forEach(function (dropdownToggle) {
            dropdownToggle.addEventListener("click", function (event) {
                var dropdownMenu = event.target.nextElementSibling;

                // Toggle 'show' class to display/hide the dropdown
                dropdownMenu.classList.toggle("show");
            });
        });

        // Add an event listener to hide the dropdown when clicking outside of it
        document.addEventListener("click", function (event) {
            var targetElement = event.target; // clicked element

            dropdownToggles.forEach(function (dropdownToggle) {
                var dropdownMenu = dropdownToggle.nextElementSibling;

                if (!dropdownMenu.contains(targetElement) && !dropdownToggle.contains(targetElement)) {
                    // Remove 'show' class to hide the dropdown
                    dropdownMenu.classList.remove("show");
                }
            });
        });
    });

</script> *@